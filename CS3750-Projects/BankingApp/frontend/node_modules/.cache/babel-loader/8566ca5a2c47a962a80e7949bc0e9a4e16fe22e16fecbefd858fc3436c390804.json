{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacci\\\\OneDrive\\\\Desktop\\\\Quick Drop\\\\Summer 2024\\\\CS 3750\\\\CS-3750\\\\BankingApp\\\\frontend\\\\src\\\\components\\\\shared\\\\transferBetweenCustomers.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// This function gives admin and employee users the ability to transfer money between customers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TransferBetweenCustomers() {\n  _s();\n  const [fromCustomerId, setFromCustomerId] = useState('');\n  const [toCustomerId, setToCustomerId] = useState('');\n  const [fromAccountType, setFromAccountType] = useState('checking');\n  const [toAccountType, setToAccountType] = useState('checking');\n  const [amount, setAmount] = useState('');\n  const [message, setMessage] = useState('');\n  const handleTransfer = async () => {\n    if (fromCustomerId && toCustomerId && amount) {\n      try {\n        const response = await fetch('http://localhost:4000/Transaction', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            fromCustomerID: fromCustomerId,\n            fromAccount: fromAccountType,\n            toCustomerID: toCustomerId,\n            toAccount: toAccountType,\n            amount: parseFloat(amount),\n            isLocal: fromCustomerId === toCustomerId\n          })\n        });\n        if (response.ok) {\n          setMessage(`Transferred $${amount} from Customer ${fromCustomerId} (${fromAccountType}) to Customer ${toCustomerId} (${toAccountType})`);\n\n          // Reset form fields after successful transfer\n          setFromCustomerId('');\n          setToCustomerId('');\n          setAmount('');\n          setFromAccountType('checking');\n          setToAccountType('checking');\n          window.location.reload(); // <--- \n        } else {\n          const result = await response.json();\n          setMessage(result.error);\n        }\n      } catch (err) {\n        setMessage('Failed to transfer money.');\n      }\n    } else {\n      setMessage('Please fill in all fields.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-4 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: \"Transfer Money Between Customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"From Customer ID\",\n          value: fromCustomerId,\n          onChange: e => setFromCustomerId(e.target.value),\n          className: \"form-control mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: fromAccountType,\n          onChange: e => setFromAccountType(e.target.value),\n          className: \"form-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"checking\",\n            children: \"Checking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"savings\",\n            children: \"Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"investment\",\n            children: \"Investment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"To Customer ID\",\n          value: toCustomerId,\n          onChange: e => setToCustomerId(e.target.value),\n          className: \"form-control mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: toAccountType,\n          onChange: e => setToAccountType(e.target.value),\n          className: \"form-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"checking\",\n            children: \"Checking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"savings\",\n            children: \"Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"investment\",\n            children: \"Investment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTransfer,\n        className: \"btn btn-success w-100 mb-3\",\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(TransferBetweenCustomers, \"dx+HmjNK1fIDmIUza+QWz6wJwF0=\");\n_c = TransferBetweenCustomers;\nvar _c;\n$RefreshReg$(_c, \"TransferBetweenCustomers\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TransferBetweenCustomers","_s","fromCustomerId","setFromCustomerId","toCustomerId","setToCustomerId","fromAccountType","setFromAccountType","toAccountType","setToAccountType","amount","setAmount","message","setMessage","handleTransfer","response","fetch","method","headers","body","JSON","stringify","fromCustomerID","fromAccount","toCustomerID","toAccount","parseFloat","isLocal","ok","window","location","reload","result","json","error","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zacci/OneDrive/Desktop/Quick Drop/Summer 2024/CS 3750/CS-3750/BankingApp/frontend/src/components/shared/transferBetweenCustomers.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// This function gives admin and employee users the ability to transfer money between customers\r\n\r\nexport default function TransferBetweenCustomers() {\r\n    const [fromCustomerId, setFromCustomerId] = useState('');\r\n    const [toCustomerId, setToCustomerId] = useState('');\r\n    const [fromAccountType, setFromAccountType] = useState('checking');\r\n    const [toAccountType, setToAccountType] = useState('checking');\r\n    const [amount, setAmount] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleTransfer = async () => {\r\n        if (fromCustomerId && toCustomerId && amount) {\r\n            try {\r\n                const response = await fetch('http://localhost:4000/Transaction', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        fromCustomerID: fromCustomerId,\r\n                        fromAccount: fromAccountType,\r\n                        toCustomerID: toCustomerId,\r\n                        toAccount: toAccountType,\r\n                        amount: parseFloat(amount),\r\n                        isLocal: fromCustomerId === toCustomerId\r\n                    })\r\n                });\r\n\r\n                if (response.ok) {\r\n                    setMessage(`Transferred $${amount} from Customer ${fromCustomerId} (${fromAccountType}) to Customer ${toCustomerId} (${toAccountType})`);\r\n                    \r\n                    // Reset form fields after successful transfer\r\n                    setFromCustomerId('');\r\n                    setToCustomerId('');\r\n                    setAmount('');\r\n                    setFromAccountType('checking');\r\n                    setToAccountType('checking');\r\n                    \r\n                    window.location.reload(); // <--- \r\n                } else {\r\n                    const result = await response.json();\r\n                    setMessage(result.error);\r\n                }\r\n            } catch (err) {\r\n                setMessage('Failed to transfer money.');\r\n            }\r\n        } else {\r\n            setMessage('Please fill in all fields.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <div className=\"card p-4 shadow-sm\">\r\n                <h2 className=\"text-center mb-4\">Transfer Money Between Customers</h2>\r\n\r\n                {/* From Customer */}\r\n                <div className=\"mb-3\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"From Customer ID\"\r\n                        value={fromCustomerId}\r\n                        onChange={(e) => setFromCustomerId(e.target.value)}\r\n                        className=\"form-control mb-2\"\r\n                    />\r\n                    <select\r\n                        value={fromAccountType}\r\n                        onChange={(e) => setFromAccountType(e.target.value)}\r\n                        className=\"form-select\"\r\n                    >\r\n                        <option value=\"checking\">Checking</option>\r\n                        <option value=\"savings\">Savings</option>\r\n                        <option value=\"investment\">Investment</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* To Customer */}\r\n                <div className=\"mb-3\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"To Customer ID\"\r\n                        value={toCustomerId}\r\n                        onChange={(e) => setToCustomerId(e.target.value)}\r\n                        className=\"form-control mb-2\"\r\n                    />\r\n                    <select\r\n                        value={toAccountType}\r\n                        onChange={(e) => setToAccountType(e.target.value)}\r\n                        className=\"form-select\"\r\n                    >\r\n                        <option value=\"checking\">Checking</option>\r\n                        <option value=\"savings\">Savings</option>\r\n                        <option value=\"investment\">Investment</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Amount */}\r\n                <div className=\"mb-3\">\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Amount\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Transfer Button */}\r\n                <button onClick={handleTransfer} className=\"btn btn-success w-100 mb-3\">Transfer</button>\r\n\r\n                {/* Message Display */}\r\n                {message && <p className=\"text-success\">{message}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}