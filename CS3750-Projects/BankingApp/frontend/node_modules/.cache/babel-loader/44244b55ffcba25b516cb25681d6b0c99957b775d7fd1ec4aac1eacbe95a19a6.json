{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacci\\\\OneDrive\\\\Desktop\\\\Quick Drop\\\\Summer 2024\\\\CS 3750\\\\CS-3750\\\\BankingApp\\\\frontend\\\\src\\\\components\\\\shared\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//LOGINS\n// CustomerID: 69580\n// Password: blake \n\n// CustomerID: 19638\n// Password: anakin \n\n// CustomerID: 13579\n// Password: abcde  \n\n// CustomerID: 12345\n// Password: password123 \n\n// This function is used to log in to the application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [customerID, setCustomerID] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/session/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          customerID,\n          password\n        }),\n        credentials: 'include'\n      });\n      const result = await response.json();\n      if (response.ok) {\n        localStorage.setItem('user', JSON.stringify(result.user));\n        if (result.user.role === 'admin' || result.user.role === 'administrator') {\n          navigate('/adminDashboard');\n        } else if (result.user.role === 'employee') {\n          navigate('/employeeDashboard');\n        } else {\n          navigate('/customerDashboard');\n        }\n      } else {\n        setError(result.error);\n      }\n    } catch (err) {\n      setError('The user ID or password were incorrect. Try again!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center vh-100 bg-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4 rounded\",\n      style: {\n        maxWidth: '400px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center text-primary mb-4\",\n        children: \"Welcome Back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-muted mb-4\",\n        children: \"Please log in to your account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"customerID\",\n            className: \"form-label\",\n            children: \"Customer ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"customerID\",\n            placeholder: \"Enter your Customer ID\",\n            value: customerID,\n            onChange: e => setCustomerID(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-100\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"QFUmRgz7iJbMwIl4K10ElmVRkao=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","customerID","setCustomerID","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","credentials","result","json","ok","localStorage","setItem","user","role","err","className","children","style","maxWidth","width","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/zacci/OneDrive/Desktop/Quick Drop/Summer 2024/CS 3750/CS-3750/BankingApp/frontend/src/components/shared/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//LOGINS\r\n// CustomerID: 69580\r\n// Password: blake \r\n\r\n// CustomerID: 19638\r\n// Password: anakin \r\n\r\n// CustomerID: 13579\r\n// Password: abcde  \r\n\r\n// CustomerID: 12345\r\n// Password: password123 \r\n\r\n// This function is used to log in to the application\r\nexport default function Login() {\r\n    const [customerID, setCustomerID] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:4000/session/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ customerID, password }),\r\n                credentials: 'include'\r\n            });\r\n    \r\n            const result = await response.json();\r\n    \r\n            if (response.ok) {\r\n                localStorage.setItem('user', JSON.stringify(result.user));\r\n                if (result.user.role === 'admin'|| result.user.role === 'administrator') {\r\n                    navigate('/adminDashboard');\r\n                } else if (result.user.role === 'employee') {\r\n                    navigate('/employeeDashboard');\r\n                } else {\r\n                    navigate('/customerDashboard');\r\n                }\r\n            } else {\r\n                setError(result.error);\r\n            }\r\n        } catch (err) {\r\n            setError('The user ID or password were incorrect. Try again!');\r\n        }\r\n    };    \r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center vh-100 bg-light\">\r\n            <div className=\"card shadow-lg p-4 rounded\" style={{ maxWidth: '400px', width: '100%' }}>\r\n                <h1 className=\"text-center text-primary mb-4\">Welcome Back!</h1>\r\n                <p className=\"text-center text-muted mb-4\">Please log in to your account.</p>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"customerID\" className=\"form-label\">Customer ID</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"customerID\"\r\n                            placeholder=\"Enter your Customer ID\"\r\n                            value={customerID}\r\n                            onChange={(e) => setCustomerID(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100\">Login</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}