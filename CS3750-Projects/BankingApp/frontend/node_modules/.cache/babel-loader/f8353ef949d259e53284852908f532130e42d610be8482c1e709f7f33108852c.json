{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacci\\\\OneDrive\\\\Desktop\\\\Quick Drop\\\\Summer 2024\\\\CS 3750\\\\CS-3750\\\\BankingApp\\\\frontend\\\\src\\\\components\\\\shared\\\\accountDetails.js\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// // Account Details needs to show the most recent transactions and make sure it fetches the correct amount for each account balance.\n// // This function will show the account holder's name, account ID, account type, and balance for each account. Along with the most recent transactions.\n// const AccountDetails = ({ details, user }) => {\n//     const [accountDetails, setAccountDetails] = useState(details || null);\n\n//     useEffect(() => {\n//         if (!details) {\n//             const user = JSON.parse(localStorage.getItem('user'));\n//             if (user) {\n//                 axios.get(`http://localhost:4000/findCustomer`, {\n//                     body: {\n//                         customerID: user.customerID\n//                     }\n//                 })\n//                 .then(response => {\n//                     setAccountDetails(response.data);\n//                 })\n//                 .catch(error => {\n//                     console.error('There was an error fetching the account details!', error);\n//                 });\n//             }\n//         }\n//     }, [details]);\n\n//     if (!accountDetails) {\n//         return <div className=\"text-center\">Loading...</div>;\n//     }\n\n//     //Limit to 3 most recent transactions\n//     const recentTransactions = accountDetails.transactions.slice(0, 3);\n\n//     return (\n//         <div className=\"container my-4\">\n//             <div className=\"card shadow\">\n//                 <div className=\"card-body\">\n//                     <h2 className=\"text-center mb-4\">Account Details</h2>\n//                     <div className=\"mb-3\">\n//                         <p className=\"text-muted mb-1\"><strong>Account Holder:</strong> {accountDetails.accountHolderName}</p>\n//                         <p className=\"text-muted mb-1\"><strong>Account ID:</strong> {accountDetails.accountHolderID}</p>\n\n//                         {accountDetails.accounts.map((account, index) => (\n//                             <div key={index} className=\"border rounded p-3 mb-3\">\n//                                 <h5 className=\"mb-2\">{account.accountType} Account</h5>\n//                                 <p className=\"mb-1\"><strong>Balance:</strong> ${account.balance.toFixed(2)}</p>\n//                             </div>\n//                         ))}\n//                     </div>\n//                     <h4 className=\"text-secondary\">Recent Transactions</h4>\n//                     <div className=\"table-responsive\">\n//                         <table className=\"table table-striped table-bordered\">\n//                             <thead className=\"thead-dark\">\n//                                 <tr>\n//                                     <th>Date</th>\n//                                     <th>Type</th>\n//                                     <th>Amount</th>\n//                                     <th>Account Type</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {recentTransactions.map(transaction => (\n//                                     <tr key={transaction.id}>\n//                                         <td>{transaction.date}</td>\n//                                         <td>{transaction.type}</td>\n//                                         <td>${transaction.amount.toFixed(2)}</td>\n//                                         <td>{transaction.accountType}</td>\n//                                     </tr>\n//                                 ))}\n//                             </tbody>\n//                         </table>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default AccountDetails;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountDetails = ({\n  user\n}) => {\n  console.log(\"User prop in AccountDetails:\", user); // Add this line\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"No customer ID available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Account Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Customer ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 52\n          }, this), \" \", user.customerID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_c = AccountDetails;\nexport default AccountDetails;\nvar _c;\n$RefreshReg$(_c, \"AccountDetails\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AccountDetails","user","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","customerID","_c","$RefreshReg$"],"sources":["C:/Users/zacci/OneDrive/Desktop/Quick Drop/Summer 2024/CS 3750/CS-3750/BankingApp/frontend/src/components/shared/accountDetails.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// // Account Details needs to show the most recent transactions and make sure it fetches the correct amount for each account balance.\r\n// // This function will show the account holder's name, account ID, account type, and balance for each account. Along with the most recent transactions.\r\n// const AccountDetails = ({ details, user }) => {\r\n//     const [accountDetails, setAccountDetails] = useState(details || null);\r\n\r\n//     useEffect(() => {\r\n//         if (!details) {\r\n//             const user = JSON.parse(localStorage.getItem('user'));\r\n//             if (user) {\r\n//                 axios.get(`http://localhost:4000/findCustomer`, {\r\n//                     body: {\r\n//                         customerID: user.customerID\r\n//                     }\r\n//                 })\r\n//                 .then(response => {\r\n//                     setAccountDetails(response.data);\r\n//                 })\r\n//                 .catch(error => {\r\n//                     console.error('There was an error fetching the account details!', error);\r\n//                 });\r\n//             }\r\n//         }\r\n//     }, [details]);\r\n\r\n//     if (!accountDetails) {\r\n//         return <div className=\"text-center\">Loading...</div>;\r\n//     }\r\n\r\n//     //Limit to 3 most recent transactions\r\n//     const recentTransactions = accountDetails.transactions.slice(0, 3);\r\n\r\n//     return (\r\n//         <div className=\"container my-4\">\r\n//             <div className=\"card shadow\">\r\n//                 <div className=\"card-body\">\r\n//                     <h2 className=\"text-center mb-4\">Account Details</h2>\r\n//                     <div className=\"mb-3\">\r\n//                         <p className=\"text-muted mb-1\"><strong>Account Holder:</strong> {accountDetails.accountHolderName}</p>\r\n//                         <p className=\"text-muted mb-1\"><strong>Account ID:</strong> {accountDetails.accountHolderID}</p>\r\n\r\n//                         {accountDetails.accounts.map((account, index) => (\r\n//                             <div key={index} className=\"border rounded p-3 mb-3\">\r\n//                                 <h5 className=\"mb-2\">{account.accountType} Account</h5>\r\n//                                 <p className=\"mb-1\"><strong>Balance:</strong> ${account.balance.toFixed(2)}</p>\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                     <h4 className=\"text-secondary\">Recent Transactions</h4>\r\n//                     <div className=\"table-responsive\">\r\n//                         <table className=\"table table-striped table-bordered\">\r\n//                             <thead className=\"thead-dark\">\r\n//                                 <tr>\r\n//                                     <th>Date</th>\r\n//                                     <th>Type</th>\r\n//                                     <th>Amount</th>\r\n//                                     <th>Account Type</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody>\r\n//                                 {recentTransactions.map(transaction => (\r\n//                                     <tr key={transaction.id}>\r\n//                                         <td>{transaction.date}</td>\r\n//                                         <td>{transaction.type}</td>\r\n//                                         <td>${transaction.amount.toFixed(2)}</td>\r\n//                                         <td>{transaction.accountType}</td>\r\n//                                     </tr>\r\n//                                 ))}\r\n//                             </tbody>\r\n//                         </table>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AccountDetails;\r\n\r\nimport React from 'react';\r\n\r\nconst AccountDetails = ({ user }) => {\r\n    console.log(\"User prop in AccountDetails:\", user); // Add this line\r\n\r\n    if (!user) {\r\n        return <div className=\"text-center\">No customer ID available</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <div className=\"card shadow\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"text-center mb-4\">Account Details</h2>\r\n                    <p className=\"text-muted mb-1\"><strong>Customer ID:</strong> {user.customerID}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AccountDetails;\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACjCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAAC,CAAC,CAAC;;EAEnD,IAAI,CAACA,IAAI,EAAE;IACP,oBAAOF,OAAA;MAAKK,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtE;EAEA,oBACIV,OAAA;IAAKK,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3BN,OAAA;MAAKK,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBN,OAAA;QAAKK,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBN,OAAA;UAAIK,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrDV,OAAA;UAAGK,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAACN,OAAA;YAAAM,QAAA,EAAQ;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACR,IAAI,CAACS,UAAU;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACE,EAAA,GAjBIX,cAAc;AAmBpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}