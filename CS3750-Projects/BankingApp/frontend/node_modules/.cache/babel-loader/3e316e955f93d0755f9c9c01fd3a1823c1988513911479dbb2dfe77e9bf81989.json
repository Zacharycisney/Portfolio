{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacci\\\\OneDrive\\\\Desktop\\\\Quick Drop\\\\Summer 2024\\\\CS 3750\\\\CS-3750\\\\BankingApp\\\\frontend\\\\src\\\\components\\\\shared\\\\searchCustomer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AccountDetails from './accountDetails';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchCustomer() {\n  _s();\n  const [searchInput, setSearchInput] = useState('');\n  const [customerDetails, setCustomerDetails] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleInputChange = e => setSearchInput(e.target.value);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!searchInput) {\n      setMessage('Please enter an Account ID');\n      return;\n    }\n    try {\n      // Dummy data for testing\n      const dummyCustomerDetails = {\n        accountHolderName: 'James Dean',\n        accountID: '987654321',\n        accounts: [{\n          accountType: 'Checking',\n          balance: 1000.0\n        }, {\n          accountType: 'Savings',\n          balance: 2500.0\n        }, {\n          accountType: 'Investments',\n          balance: 5000.0\n        }],\n        transactions: [{\n          id: 1,\n          date: '2024-07-31',\n          type: 'Deposit',\n          amount: 500,\n          accountType: 'Checking'\n        }, {\n          id: 2,\n          date: '2024-07-30',\n          type: 'Withdrawal',\n          amount: 200,\n          accountType: 'Savings'\n        }, {\n          id: 3,\n          date: '2024-07-29',\n          type: 'Investment',\n          amount: 300,\n          accountType: 'Investments'\n        }, {\n          id: 4,\n          date: '2024-07-28',\n          type: 'Withdrawal',\n          amount: 150,\n          accountType: 'Checking'\n        }, {\n          id: 5,\n          date: '2024-07-27',\n          type: 'Deposit',\n          amount: 100,\n          accountType: 'Savings'\n        }]\n      };\n\n      // Simulate a successful API call that finds the customer\n      setCustomerDetails(dummyCustomerDetails);\n      setMessage('');\n\n      // Uncomment below to use actual API endpoint\n      // const response = await fetch(`http://localhost:4000/customers/${searchInput}`);\n      // if (response.ok) {\n      //     const data = await response.json();\n      //     setCustomerDetails(data);\n      //     setMessage('');\n      // } else {\n      //     setCustomerDetails(null);\n      //     setMessage('Customer not found');\n      // }\n    } catch (error) {\n      setCustomerDetails(null);\n      setMessage('Error searching for customer');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card p-4 shadow-sm ${customerDetails ? 'expanded-card' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: \"Search Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"searchInput\",\n            className: \"form-label\",\n            children: \"Customer ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"searchInput\",\n            value: searchInput,\n            onChange: handleInputChange,\n            required: true,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success w-100\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger mt-3\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this), customerDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(AccountDetails, {\n          details: customerDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchCustomer, \"EM9hjjPzUWq3Zd6V1lOkG/l7g84=\");\n_c = SearchCustomer;\nvar _c;\n$RefreshReg$(_c, \"SearchCustomer\");","map":{"version":3,"names":["React","useState","AccountDetails","jsxDEV","_jsxDEV","SearchCustomer","_s","searchInput","setSearchInput","customerDetails","setCustomerDetails","message","setMessage","handleInputChange","e","target","value","handleSubmit","preventDefault","dummyCustomerDetails","accountHolderName","accountID","accounts","accountType","balance","transactions","id","date","type","amount","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","details","_c","$RefreshReg$"],"sources":["C:/Users/zacci/OneDrive/Desktop/Quick Drop/Summer 2024/CS 3750/CS-3750/BankingApp/frontend/src/components/shared/searchCustomer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AccountDetails from './accountDetails';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function SearchCustomer() {\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [customerDetails, setCustomerDetails] = useState(null);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleInputChange = (e) => setSearchInput(e.target.value);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!searchInput) {\r\n            setMessage('Please enter an Account ID');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Dummy data for testing\r\n            const dummyCustomerDetails = {\r\n                accountHolderName: 'James Dean',\r\n                accountID: '987654321',\r\n                accounts: [\r\n                    { accountType: 'Checking', balance: 1000.0 },\r\n                    { accountType: 'Savings', balance: 2500.0 },\r\n                    { accountType: 'Investments', balance: 5000.0 },\r\n                ],\r\n                transactions: [\r\n                    { id: 1, date: '2024-07-31', type: 'Deposit', amount: 500, accountType: 'Checking' },\r\n                    { id: 2, date: '2024-07-30', type: 'Withdrawal', amount: 200, accountType: 'Savings' },\r\n                    { id: 3, date: '2024-07-29', type: 'Investment', amount: 300, accountType: 'Investments' },\r\n                    { id: 4, date: '2024-07-28', type: 'Withdrawal', amount: 150, accountType: 'Checking' },\r\n                    { id: 5, date: '2024-07-27', type: 'Deposit', amount: 100, accountType: 'Savings' },\r\n                ],\r\n            };\r\n\r\n            // Simulate a successful API call that finds the customer\r\n            setCustomerDetails(dummyCustomerDetails);\r\n            setMessage('');\r\n\r\n            // Uncomment below to use actual API endpoint\r\n            // const response = await fetch(`http://localhost:4000/customers/${searchInput}`);\r\n            // if (response.ok) {\r\n            //     const data = await response.json();\r\n            //     setCustomerDetails(data);\r\n            //     setMessage('');\r\n            // } else {\r\n            //     setCustomerDetails(null);\r\n            //     setMessage('Customer not found');\r\n            // }\r\n        } catch (error) {\r\n            setCustomerDetails(null);\r\n            setMessage('Error searching for customer');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <div className={`card p-4 shadow-sm ${customerDetails ? 'expanded-card' : ''}`}>\r\n                <h2 className=\"text-center mb-4\">Search Customer</h2>\r\n                <form onSubmit={handleSubmit} className=\"mb-4\">\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"searchInput\" className=\"form-label\">Customer ID:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"searchInput\"\r\n                            value={searchInput}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-success w-100\">Search</button>\r\n                </form>\r\n                {message && <p className=\"text-danger mt-3\">{message}</p>}\r\n                {customerDetails && (\r\n                    <div className=\"mt-4\">\r\n                        <AccountDetails details={customerDetails} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}