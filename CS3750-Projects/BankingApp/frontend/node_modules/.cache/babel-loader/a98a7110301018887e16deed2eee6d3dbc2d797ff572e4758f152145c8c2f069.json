{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacci\\\\OneDrive\\\\Desktop\\\\Quick Drop\\\\Summer 2024\\\\CS 3750\\\\CS-3750\\\\BankingApp\\\\frontend\\\\src\\\\components\\\\shared\\\\moneyTransfer.js\",\n  _s = $RefreshSig$();\n// Blake\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoneyTransfer() {\n  _s();\n  const navigate = useNavigate();\n  const [balances, setBalances] = useState({\n    savings: 200,\n    checking: 800\n  });\n  const [transferAmount, setTransferAmount] = useState('');\n  const [sourceAccount, setSourceAccount] = useState('savings');\n  const [destinationAccount, setDestinationAccount] = useState('checking');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    async function fetchBalances() {\n      try {\n        // Uncomment the below code to use actual API endpoint\n        // const response = await fetch('http://localhost:4000/accountBalances', {\n        //     method: 'GET',\n        //     credentials: 'include',\n        // });\n\n        // if (response.status === 401) {\n        //     navigate('/login');\n        //     return;\n        // }\n\n        // if (!response.ok) {\n        //     const message = `An error has occurred: ${response.statusText}`;\n        //     window.alert(message);\n        //     return;\n        // }\n\n        // const balances = await response.json();\n        // setBalances(balances);\n\n        // Dummy data for testing\n        setBalances({\n          savings: 200,\n          checking: 800\n        });\n      } catch (error) {\n        console.error('Error fetching account balances:', error);\n      }\n    }\n    fetchBalances();\n  }, [navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (sourceAccount === destinationAccount) {\n      setError('Source and destination accounts cannot be the same.');\n      return;\n    }\n    const sourceBalance = balances[sourceAccount];\n    const destinationBalance = balances[destinationAccount];\n    const transferAmountFloat = parseFloat(transferAmount);\n    if (transferAmountFloat <= 0) {\n      setError('Transfer amount must be positive.');\n      return;\n    }\n    if (transferAmountFloat > sourceBalance) {\n      setError('Insufficient funds in the source account.');\n      return;\n    }\n    const updatedBalances = {\n      ...balances,\n      [sourceAccount]: sourceBalance - transferAmountFloat,\n      [destinationAccount]: destinationBalance + transferAmountFloat\n    };\n    try {\n      // Uncomment the below code to use actual API endpoint\n      // const response = await fetch('http://localhost:4000/transfer', {\n      //     method: 'POST',\n      //     headers: {\n      //         'Content-Type': 'application/json',\n      //     },\n      //     body: JSON.stringify({ sourceAccount, destinationAccount, amount: transferAmountFloat }),\n      //     credentials: 'include',\n      // });\n\n      // if (!response.ok) {\n      //     const errorMessage = await response.text();\n      //     throw new Error(errorMessage);\n      // }\n\n      setBalances(updatedBalances);\n      setTransferAmount('');\n      setError('');\n    } catch (error) {\n      console.error('Error performing transfer:', error);\n      setError(error.message || 'Failed to perform transfer');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: styles.title,\n      children: \"Money Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.balanceText,\n      children: [\"Savings: $\", balances.savings.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.balanceText,\n      children: [\"Checking: $\", balances.checking.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sourceAccount\",\n          style: styles.label,\n          children: \"Source Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sourceAccount\",\n          value: sourceAccount,\n          onChange: e => setSourceAccount(e.target.value),\n          style: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"savings\",\n            children: \"Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"checking\",\n            children: \"Checking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"destinationAccount\",\n          style: styles.label,\n          children: \"Destination Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"destinationAccount\",\n          value: destinationAccount,\n          onChange: e => setDestinationAccount(e.target.value),\n          style: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"savings\",\n            children: \"Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"checking\",\n            children: \"Checking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          style: styles.label,\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          value: transferAmount,\n          onChange: e => setTransferAmount(e.target.value),\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(MoneyTransfer, \"LZj1IH2jtZ2qFEDN68U0Vi19p5M=\", false, function () {\n  return [useNavigate];\n});\n_c = MoneyTransfer;\nconst styles = {\n  container: {\n    padding: '30px',\n    maxWidth: '700px',\n    margin: '0 auto',\n    fontFamily: 'var(--font-family)',\n    backgroundColor: 'var(--background-color)',\n    borderRadius: '10px'\n  },\n  title: {\n    textAlign: 'center',\n    color: 'var(--primary-color)',\n    marginBottom: '20px'\n  },\n  balanceText: {\n    textAlign: 'justify',\n    fontSize: '1.1rem',\n    color: 'var(--text-color)'\n  },\n  button: {\n    padding: '12px 25px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    marginTop: '15px',\n    marginRight: '10px',\n    transition: 'background-color 0.3s ease'\n  },\n  buttonHover: {\n    backgroundColor: 'var(--accent-color)'\n  },\n  form: {\n    marginTop: '25px'\n  },\n  formGroup: {\n    marginBottom: '20px'\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontSize: '1.1rem',\n    color: 'var(--primary-color)'\n  },\n  input: {\n    width: '100%',\n    padding: '12px',\n    marginBottom: '10px',\n    border: '2px solid #ddd',\n    borderRadius: '5px',\n    fontSize: '1rem',\n    transition: 'border-color 0.3s ease',\n    boxSizing: 'border-box'\n  },\n  error: {\n    color: 'red',\n    marginBottom: '10px',\n    textAlign: 'justify'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"MoneyTransfer\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","jsxDEV","_jsxDEV","MoneyTransfer","_s","navigate","balances","setBalances","savings","checking","transferAmount","setTransferAmount","sourceAccount","setSourceAccount","destinationAccount","setDestinationAccount","error","setError","fetchBalances","console","handleSubmit","e","preventDefault","sourceBalance","destinationBalance","transferAmountFloat","parseFloat","updatedBalances","message","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","balanceText","toFixed","onSubmit","form","formGroup","htmlFor","label","id","value","onChange","target","input","type","required","button","_c","padding","maxWidth","margin","fontFamily","backgroundColor","borderRadius","textAlign","color","marginBottom","fontSize","border","cursor","marginTop","marginRight","transition","buttonHover","display","width","boxSizing","$RefreshReg$"],"sources":["C:/Users/zacci/OneDrive/Desktop/Quick Drop/Summer 2024/CS 3750/CS-3750/BankingApp/frontend/src/components/shared/moneyTransfer.js"],"sourcesContent":["// Blake\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nexport default function MoneyTransfer() {\r\n    const navigate = useNavigate();\r\n\r\n    const [balances, setBalances] = useState({ savings: 200, checking: 800 });\r\n    const [transferAmount, setTransferAmount] = useState('');\r\n    const [sourceAccount, setSourceAccount] = useState('savings');\r\n    const [destinationAccount, setDestinationAccount] = useState('checking');\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchBalances() {\r\n            try {\r\n                // Uncomment the below code to use actual API endpoint\r\n                // const response = await fetch('http://localhost:4000/accountBalances', {\r\n                //     method: 'GET',\r\n                //     credentials: 'include',\r\n                // });\r\n\r\n                // if (response.status === 401) {\r\n                //     navigate('/login');\r\n                //     return;\r\n                // }\r\n\r\n                // if (!response.ok) {\r\n                //     const message = `An error has occurred: ${response.statusText}`;\r\n                //     window.alert(message);\r\n                //     return;\r\n                // }\r\n\r\n                // const balances = await response.json();\r\n                // setBalances(balances);\r\n\r\n                // Dummy data for testing\r\n                setBalances({ savings: 200, checking: 800 });\r\n            } catch (error) {\r\n                console.error('Error fetching account balances:', error);\r\n            }\r\n        }\r\n\r\n        fetchBalances();\r\n    }, [navigate]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (sourceAccount === destinationAccount) {\r\n            setError('Source and destination accounts cannot be the same.');\r\n            return;\r\n        }\r\n\r\n        const sourceBalance = balances[sourceAccount];\r\n        const destinationBalance = balances[destinationAccount];\r\n        const transferAmountFloat = parseFloat(transferAmount);\r\n\r\n        if (transferAmountFloat <= 0) {\r\n            setError('Transfer amount must be positive.');\r\n            return;\r\n        }\r\n\r\n        if (transferAmountFloat > sourceBalance) {\r\n            setError('Insufficient funds in the source account.');\r\n            return;\r\n        }\r\n\r\n        const updatedBalances = {\r\n            ...balances,\r\n            [sourceAccount]: sourceBalance - transferAmountFloat,\r\n            [destinationAccount]: destinationBalance + transferAmountFloat,\r\n        };\r\n\r\n        try {\r\n            // Uncomment the below code to use actual API endpoint\r\n            // const response = await fetch('http://localhost:4000/transfer', {\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //         'Content-Type': 'application/json',\r\n            //     },\r\n            //     body: JSON.stringify({ sourceAccount, destinationAccount, amount: transferAmountFloat }),\r\n            //     credentials: 'include',\r\n            // });\r\n\r\n            // if (!response.ok) {\r\n            //     const errorMessage = await response.text();\r\n            //     throw new Error(errorMessage);\r\n            // }\r\n\r\n            setBalances(updatedBalances);\r\n            setTransferAmount('');\r\n            setError('');\r\n        } catch (error) {\r\n            console.error('Error performing transfer:', error);\r\n            setError(error.message || 'Failed to perform transfer');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <h3 style={styles.title}>Money Transfer</h3>\r\n\r\n            \r\n\r\n            <p style={styles.balanceText}>Savings: ${balances.savings.toFixed(2)}</p>\r\n            <p style={styles.balanceText}>Checking: ${balances.checking.toFixed(2)}</p>\r\n\r\n            <form onSubmit={handleSubmit} style={styles.form}>\r\n                <div style={styles.formGroup}>\r\n                    <label htmlFor=\"sourceAccount\" style={styles.label}>Source Account:</label>\r\n                    <select id=\"sourceAccount\" value={sourceAccount} onChange={(e) => setSourceAccount(e.target.value)} style={styles.input}>\r\n                        <option value=\"savings\">Savings</option>\r\n                        <option value=\"checking\">Checking</option>\r\n                    </select>\r\n                </div>\r\n                <div style={styles.formGroup}>\r\n                    <label htmlFor=\"destinationAccount\" style={styles.label}>Destination Account:</label>\r\n                    <select id=\"destinationAccount\" value={destinationAccount} onChange={(e) => setDestinationAccount(e.target.value)} style={styles.input}>\r\n                        <option value=\"savings\">Savings</option>\r\n                        <option value=\"checking\">Checking</option>\r\n                    </select>\r\n                </div>\r\n                <div style={styles.formGroup}>\r\n                    <label htmlFor=\"amount\" style={styles.label}>Amount:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"amount\"\r\n                        value={transferAmount}\r\n                        onChange={(e) => setTransferAmount(e.target.value)}\r\n                        required\r\n                        style={styles.input}\r\n                    />\r\n                </div>\r\n                {error && <p style={styles.error}>{error}</p>}\r\n                <button type=\"submit\" style={styles.button}>Transfer</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        padding: '30px',\r\n        maxWidth: '700px',\r\n        margin: '0 auto',\r\n        fontFamily: 'var(--font-family)',\r\n        backgroundColor: 'var(--background-color)',\r\n        borderRadius: '10px',\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        color: 'var(--primary-color)',\r\n        marginBottom: '20px',\r\n    },\r\n    balanceText: {\r\n        textAlign: 'justify',\r\n        fontSize: '1.1rem',\r\n        color: 'var(--text-color)',\r\n    },\r\n    button: {\r\n        padding: '12px 25px',\r\n        backgroundColor: '#007bff',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        marginTop: '15px',\r\n        marginRight: '10px',\r\n        transition: 'background-color 0.3s ease',\r\n    },\r\n    buttonHover: {\r\n        backgroundColor: 'var(--accent-color)',\r\n    },\r\n    form: {\r\n        marginTop: '25px',\r\n    },\r\n    formGroup: {\r\n        marginBottom: '20px',\r\n    },\r\n    label: {\r\n        display: 'block',\r\n        marginBottom: '5px',\r\n        fontSize: '1.1rem',\r\n        color: 'var(--primary-color)',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        padding: '12px',\r\n        marginBottom: '10px',\r\n        border: '2px solid #ddd',\r\n        borderRadius: '5px',\r\n        fontSize: '1rem',\r\n        transition: 'border-color 0.3s ease',\r\n        boxSizing: 'border-box',\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        marginBottom: '10px',\r\n        textAlign: 'justify',\r\n    },\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}